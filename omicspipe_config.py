from starcluster.clustersetup import ClusterSetup
from starcluster.logger import log

class OmicsPipeInstaller(ClusterSetup):
	def run(self, nodes, master, user, user_shell, volumes):
		for node in nodes:
			log.info("Installing Docker on %s " % (node.alias))
			node.ssh.execute('wget https://bitbucket.org/sulab/omics_pipe/downloads/apt_sources -O /etc/apt/sources.list')
			node.ssh.execute('apt-get -y update')
			node.ssh.execute('apt-get -y install linux-image-extra-`uname -r`')
			node.ssh.execute('apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9')
			node.ssh.execute('echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list')
			node.ssh.execute('apt-get -y update')
			node.ssh.execute('apt-get -y install lxc-docker')

			log.info("Configuring perl locale on %s " % (node.alias))
			node.ssh.execute('locale-gen en_US en_US.UTF-8 hu_HU hu_HU.UTF-8')
			node.ssh.execute('dpkg-reconfigure locales')
			
			log.info("Installing Graphviz on %s " % (node.alias))
			node.ssh.execute('apt-get install -y graphviz')

			log.info("Installing mdadm on %s " % (node.alias))
			node.ssh.execute('export DEBIAN_FRONTEND=noninteractive && apt-get -q -y install mdadm --no-install-recommends')

			log.info("Installing s3cmd on %s " % (node.alias))
			node.ssh.execute('apt-get -y install s3cmd')

			log.info("Installing lvm2 on %s " % (node.alias))
			node.ssh.execute('apt-get -y install lvm2')

			log.info("Installing xfs on %s " % (node.alias))
			node.ssh.execute('apt-get -y install xfs xfsprogs')

			log.info("Installing pigz on %s " % (node.alias))
			node.ssh.execute('apt-get -y install pigz')
			node.ssh.execute('apt-get -y install libjemalloc-dev libbz2-dev libsnappy-dev')

			log.info("Installing and setting up modules support on %s " % (node.alias))
			node.ssh.execute('mkdir Downloads')
			node.ssh.execute('wget -c -P Downloads http://downloads.sourceforge.net/project/modules/Modules/modules-3.2.10/modules-3.2.10.tar.gz')
			node.ssh.execute('tar xvzf Downloads/modules-3.2.10.tar.gz -C Downloads')
			node.ssh.execute('./Downloads/modules-3.2.10/configure')
			node.ssh.execute('make')
			node.ssh.execute('make install')
			node.ssh.execute('cp /usr/local/Modules/3.2.10/init/sh /etc/profile.d/modules.sh')
			node.ssh.execute('chmod 755 /etc/profile.d/modules.sh')
			node.ssh.execute('. /etc/profile.d/modules.sh')

			log.info("Installing OmicsPipe")
			node.ssh.execute('cd / && source /etc/environment && hg clone https://bitbucket.org/sulab/omics_pipe')

			log.info("Installing and setting up EasyBuild on %s " % (node.alias))
			node.ssh.execute('easy_install easybuild')
			node.ssh.execute("sed '131,137d' /usr/local/lib/python2.7/dist-packages/easybuild_framework-1.14.0-py2.7.egg/easybuild/main.py > tmp_main.py && mv tmp_main.py /usr/local/lib/python2.7/dist-packages/easybuild_framework-1.14.0-py2.7.egg/easybuild/main.py")
			node.ssh.execute('echo "export MODULEPATH=/root/.local/easybuild/modules/all:$MODULEPATH" >> /etc/bash.bashrc')
			node.ssh.execute('echo "export PATH=$PATH:/usr/local/Modules/3.2.10/bin" >> /etc/bash.bashrc')
			node.ssh.execute('echo ". /etc/profile.d/modules.sh" >> /etc/bash.bashrc')		
			node.ssh.execute('echo "export MODULEPATH=/root/.local/easybuild/modules/all:$MODULEPATH" >> /etc/environment')
			node.ssh.execute('echo "export PATH=$PATH:/usr/local/Modules/3.2.10/bin" >> /etc/environment')
			node.ssh.execute('echo ". /etc/profile.d/modules.sh" >> /etc/environment')
			node.ssh.execute('echo "export MODULEPATH=/root/.local/easybuild/modules/all:$MODULEPATH" >> /etc/profile')
			node.ssh.execute('echo "export PATH=$PATH:/usr/local/Modules/3.2.10/bin" >> /etc/profile')
			node.ssh.execute('echo ". /etc/profile.d/modules.sh" >> /etc/profile')
			node.ssh.execute('echo "/root/.local/easybuild/modules/all" >> /usr/local/Modules/3.2.10/init/.modulespath')

			log.info("Installing SAMtools on %s" % (node.alias))
			node.ssh.execute('eb /omics_pipe/dist/easyconfigs/samtools-0.1.19.eb')
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/samtools')
			node.ssh.execute('mv /root/.local/easybuild/modules/all/SAMtools/0.1.19 /root/.local/easybuild/modules/all/samtools/0.1.19')

			log.info("Installing fastqc on %s" % (node.alias))
			node.ssh.execute('eb /omics_pipe/dist/easyconfigs/fastqc-0.10.1.eb')

			log.info("Installing STAR on %s" % (node.alias))
			node.ssh.execute('eb /omics_pipe/dist/easyconfigs/star-2.3.0.eb')
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/star')
			node.ssh.execute('mv /root/.local/easybuild/modules/all/STAR/2.3.0e /root/.local/easybuild/modules/all/star/2.3.0e')

			log.info("Installing SAMtools rocksort on %s" % (node.alias))
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/samtools/dnanexus-1.0')
			node.ssh.execute('git clone https://github.com/dnanexus/htslib.git')
			node.ssh.execute('git clone https://github.com/dnanexus/samtools.git')
			node.ssh.execute('mv samtools/* /root/.local/easybuild/software/samtools/dnanexus-1.0/')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/samtools_dnanexus-1.0 /root/.local/easybuild/modules/all/samtools/dnanexus-1.0')

			log.info("Creating python module files on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/python')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/python-2.6.5 /root/.local/easybuild/modules/all/python/2.6.5')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/python-2.7.4 /root/.local/easybuild/modules/all/python/2.7.4')

			log.info("Creating GATK module files on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/gatk')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/gatk/3.2-2')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/gatk /root/.local/easybuild/modules/all/gatk/3.2-2')

			log.info("Creating MuTect module files on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/mutect')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/mutect/1.1.4')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/mutect /root/.local/easybuild/modules/all/mutect/1.1.4')

			log.info("Installing R on %s" % (node.alias))
			log.info("...installing dependencies")
			node.ssh.execute('apt-get install -y libreadline-dev ncurses-dev libpng-dev texinfo texlive texlive-base luatex texlive-latex-base texlive-luatex texlive-extra-utils texlive-latex-recommended texlive-fonts-extra freetype* libxml2 libxml2-dev libpng12-dev libcurl4-openssl-dev tk-dev xterm')
			node.ssh.execute('apt-get install -y libgtk2.0-dev xorg-dev')
			log.info("...dependencies installed --> creating directories")
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/R')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/R/3.1.0')
			log.info("...directories created --> downloading R")
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/R/3.1.0/ http://cran.us.r-project.org/src/base/R-3/R-3.1.0.tar.gz')
			log.info("...R has downloaded --> decompressing files")
			node.ssh.execute('cd /root/.local/easybuild/software/R/3.1.0 && tar xvzf R-3.1.0.tar.gz')
			log.info("...files decompressed --> running ./configure")
			node.ssh.execute('cd /root/.local/easybuild/software/R/3.1.0/R-3.1.0 && ./configure --with-lapack --with-blas --with-pic --enable-threads --with-x=yes --enable-R-shlib --with-libpng --with-jpeglib --with-recommended-packages=yes')
			log.info("...configure has finished --> running make")
			node.ssh.execute('cd /root/.local/easybuild/software/R/3.1.0/R-3.1.0 && make')
			log.info("...make has finished --> copying modulefiles")
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/R /root/.local/easybuild/modules/all/R/3.1.0')
			log.info("...R/3.1.0 module has been created --> setting CRAN Mirror")
			node.ssh.execute('cp /omics_pipe/dist/AWS_customBuild/Rprofile ~/.Rprofile')

			log.info("Installing HTSeq on %s" % (node.alias))
			log.info("...installing dependencies")
			node.ssh.execute('apt-get install -y build-essential python2.7-dev python-numpy python-matplotlib')
			log.info("...dependencies installed --> downloading HTSeq")
			node.ssh.execute('wget -c -P Downloads https://pypi.python.org/packages/source/H/HTSeq/HTSeq-0.6.1.tar.gz')
			log.info("...HTSeq has downloaded --> decompressing files")
			node.ssh.execute('tar xvzf Downloads/HTSeq-0.6.1.tar.gz -C Downloads')
			log.info("...files decompressed --> running install scripts")
			node.ssh.execute('cd Downloads/HTSeq-0.6.1 && python setup.py build && python setup.py install')

			log.info("Installing Ruffus on %s" % (node.alias))
			node.ssh.execute('pip install ruffus --upgrade')

			log.info("Installing pyYAML on %s" % (node.alias))
			node.ssh.execute('pip install pyyaml')

			log.info("Installing Picard on %s" % (node.alias))
			node.ssh.execute('eb /omics_pipe/dist/easyconfigs/picard-1.114.eb')
			node.ssh.execute('chmod +x /root/.local/easybuild/software/picard/1.114/*.jar')

			log.info("Installing BWA on %s" % (node.alias))
			node.ssh.execute('eb /omics_pipe/dist/easyconfigs/bwa-0.7.9a.eb')
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/bwa')
			node.ssh.execute('mv /root/.local/easybuild/modules/all/BWA/0.7.9a /root/.local/easybuild/modules/all/bwa/0.7.9a')

			log.info("Installing BEDtools on %s" % (node.alias))
			node.ssh.execute('eb /omics_pipe/dist/easyconfigs/bedtools-2.20.1.eb')

			log.info("Installing VCFtools on %s" % (node.alias))
			node.ssh.execute('eb /omics_pipe/dist/easyconfigs/vcftools-0.1.12.eb')
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/vcftools')
			node.ssh.execute('mv /root/.local/easybuild/modules/all/VCFtools/0.1.12 /root/.local/easybuild/modules/all/vcftools/0.1.12')

			log.info("Installing Bowtie on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/bowtie')
			node.ssh.execute('mkdir -p /apps/fusioncatcher/tools')
			node.ssh.execute('cd /apps/fusioncatcher/tools && wget http://sourceforge.net/projects/bowtie-bio/files/bowtie/1.0.1/bowtie-1.0.1-linux-x86_64.zip')
			node.ssh.execute('cd /apps/fusioncatcher/tools && unzip bowtie-1.0.1-linux-x86_64.zip && ln -s bowtie-1.0.1 bowtie')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/bowtie /root/.local/easybuild/modules/all/bowtie/1.0.1')

			log.info("Installing Blat on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/ucsc-tools')
			node.ssh.execute('mkdir /apps/fusioncatcher/tools/blat_v0.35')
			node.ssh.execute('cd /apps/fusioncatcher/tools/blat_v0.35 && wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64.v287/blat/blat && chmod +x blat')
			node.ssh.execute('cd /apps/fusioncatcher/tools/blat_v0.35 && wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64.v287/faToTwoBit && chmod +x faToTwoBit')
			node.ssh.execute('cd /apps/fusioncatcher/tools/blat_v0.35 && wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64.v287/bedGraphToBigWig && chmod +x bedGraphToBigWig')
			node.ssh.execute('ln -s /apps/fusioncatcher/tools/blat_v0.35 blat')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/ucsc-tools /root/.local/easybuild/modules/all/ucsc-tools/287')

			log.info("Installing FusionCatcher on %s" % (node.alias))
			node.ssh.execute('apt-get install -y python-biopython')
			node.ssh.execute('wget http://sourceforge.net/projects/fusioncatcher/files/bootstrap.py && python bootstrap.py -y')
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/fusioncatcher')
			node.ssh.execute('mkdir -p /databases/ensembl_v75')
			# node.ssh.execute('cd /databases/ensembl_v75 && wget http://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v75b.tar.gz.aa\
			# 	&& wget http://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v75b.tar.gz.ab\
			# 	&& wget http://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v75b.tar.gz.ac\
			# 	&& wget http://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v75b.tar.gz.ad')
			# node.ssh.execute('cd /databases/ensembl_v75 && cat ensembl_v75b.tar.gz.* | tar xz')
			# node.ssh.execute('cd /databases/ensembl_v75 && ln -s ensembl_v75 current')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/fusioncatcher /root/.local/easybuild/modules/all/fusioncatcher/0.99b')

			log.info("Installing Bowtie2 on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/bowtie2')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/bowtie2/2.2.3')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/bowtie2/2.2.3/ http://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.3/bowtie2-2.2.3-linux-x86_64.zip')
			node.ssh.execute('unzip /root/.local/easybuild/software/bowtie2/2.2.3/bowtie2-2.2.3-linux-x86_64.zip -d /root/.local/easybuild/software/bowtie2/2.2.3/')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/bowtie2 /root/.local/easybuild/modules/all/bowtie2/2.2.3')

			log.info("Installing GeneTorrent on %s" % (node.alias))
			node.ssh.execute('apt-get install -y libboost-filesystem1.49.0 libboost-program-options1.49.0 libboost-regex1.49.0 libxerces-c3.1 libxqilla6')
			node.ssh.execute('wget https://cghub.ucsc.edu/software/downloads/GeneTorrent/3.8.5a/genetorrent-common_3.8.5a-ubuntu2.94-13.10_amd64.deb')
			node.ssh.execute('wget https://cghub.ucsc.edu/software/downloads/GeneTorrent/3.8.5a/genetorrent-download_3.8.5a-ubuntu2.94-13.10_amd64.deb')
			node.ssh.execute('dpkg -i genetorrent-common_3.8.5a-ubuntu2.94-13.10_amd64.deb genetorrent-download_3.8.5a-ubuntu2.94-13.10_amd64.deb')

			log.info("Installing RSeQC on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/rseqc')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/rseqc/2.3.9')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/rseqc/2.3.9 http://sourceforge.net/projects/rseqc/files/RSeQC-2.3.9.tar.gz')
			node.ssh.execute('tar xvzf /root/.local/easybuild/software/rseqc/2.3.9/RSeQC-2.3.9.tar.gz -C /root/.local/easybuild/software/rseqc/2.3.9/')
			node.ssh.execute('cd /root/.local/easybuild/software/rseqc/2.3.9/RSeQC-2.3.9 && python setup.py install')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/rseqc /root/.local/easybuild/modules/all/rseqc/2.3.9')

			log.info("Installing MACS on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/macs')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/MACS/1.4.2')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/MACS/1.4.2 https://github.com/downloads/taoliu/MACS/MACS-1.4.2-1.tar.gz')
			node.ssh.execute('tar xvzf /root/.local/easybuild/software/MACS/1.4.2/MACS-1.4.2-1.tar.gz -C /root/.local/easybuild/software/MACS/1.4.2/')
			node.ssh.execute('cd /root/.local/easybuild/software/MACS/1.4.2/MACS-1.4.2 && python setup.py install')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/macs /root/.local/easybuild/modules/all/macs/1.4.2')

			log.info("Installing Tophat on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/tophat')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/tophat/2.0.12')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/tophat/2.0.12 http://ccb.jhu.edu/software/tophat/downloads/tophat-2.0.12.Linux_x86_64.tar.gz')
			node.ssh.execute('tar xvzf /root/.local/easybuild/software/tophat/2.0.12/tophat-2.0.12.Linux_x86_64.tar.gz -C /root/.local/easybuild/software/tophat/2.0.12/')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/tophat /root/.local/easybuild/modules/all/tophat/2.0.12')

			log.info("Installing VarScan on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/varscan')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/varscan/2.3.7')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/varscan/2.3.7 http://sourceforge.net/projects/varscan/files/VarScan.v2.3.7.jar')
			node.ssh.execute('chmod +x /root/.local/easybuild/software/varscan/2.3.7/VarScan.v2.3.7.jar')
			log.info("...downloaded")
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/varscan /root/.local/easybuild/modules/all/varscan/2.3.7')

			log.info("Installing SNPiR scripts on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/snpir')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/snpir/1.0/bin')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/BLAT_candidates.pl')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/config.pm')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/convertCoordinates.class')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/convertCoordinates.java')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/convertVCF.sh')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/filter_homopolymer_nucleotides.pl')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/filter_intron_near_splicejuncts.pl')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/filter_mismatch_first6bp.pl')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpir/1.0/bin http://lilab.stanford.edu/SNPiR/readme')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/snpir /root/.local/easybuild/modules/all/snpir/1.0')

			log.info("Installing Oncofuse on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/oncofuse')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/oncofuse/1.0.6')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/oncofuse/1.0.6 http://www.unav.es/genetica/oncofuse-v1.0.6.zip')
			node.ssh.execute('unzip /root/.local/easybuild/software/oncofuse/1.0.6/oncofuse-v1.0.6.zip -d /root/.local/easybuild/software/oncofuse/1.0.6/')
			node.ssh.execute('chmod +x /root/.local/easybuild/software/oncofuse/1.0.6/oncofuse-v1.0.6/Oncofuse.jar')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/oncofuse /root/.local/easybuild/modules/all/oncofuse/1.0.6')

			log.info("Installing SnpEff on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/snpeff')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/snpeff/3.6')
			log.info("...directories created")
			# node.ssh.execute('wget -c -P /root/.local/easybuild/software/snpeff/3.6 http://sourceforge.net/projects/snpeff/files/snpEff_latest_core.zip')
			# log.info("...downloaded")
			# node.ssh.execute('unzip /root/.local/easybuild/software/snpeff/3.6/snpEff_latest_core.zip -d /root/.local/easybuild/software/snpeff/3.6/')
			# node.ssh.execute('chmod +x /root/.local/easybuild/software/snpeff/3.6/snpEff/snpEff.jar')
			# node.ssh.execute('chmod +x /root/.local/easybuild/software/snpeff/3.6/snpEff/SnpSift.jar')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/snpeff /root/.local/easybuild/modules/all/snpeff/3.6')

			log.info("Installing Cufflinks on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/cufflinks')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/cufflinks/2.2.1')
			log.info("...directories created")
			# node.ssh.execute('wget -c -P /root/.local/easybuild/software/cufflinks/2.2.1 http://cufflinks.cbcb.umd.edu/downloads/cufflinks-2.2.1.Linux_x86_64.tar.gz')
			# log.info("...downloaded")
			# node.ssh.execute('tar xvzf /root/.local/easybuild/software/cufflinks/2.2.1/cufflinks-2.2.1.Linux_x86_64.tar.gz -C /root/.local/easybuild/software/cufflinks/2.2.1/')
			# log.info("...files extracted")
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/cufflinks /root/.local/easybuild/modules/all/cufflinks/2.2.1')

			log.info("Installing Intogen on %s" % (node.alias))
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/intogen')
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/intogen/2.4.1')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/intogen/2.4.1 https://bitbucket.org/intogen/mutations-analysis/get/master.tar.gz')
			node.ssh.execute('tar xzvf /root/.local/easybuild/software/intogen/2.4.1/master.tar.gz -C /root/.local/easybuild/software/intogen/2.4.1/')
			# node.ssh.execute('wget -c -P data/vep_cache ftp://ftp.ensembl.org/pub/release-75/variation/VEP/homo_sapiens_vep_75.tar.gz')
			# node.ssh.execute('sed -i '11s|$ROOT_PATH/data|/data/database/intogen|g' /root/.local/easybuild/software/intogen/2.4.1/intogen-mutations-analysis-e76a814dc868/setup')
			# node.ssh.execute('cd /root/.local/easybuild/software/intogen/2.4.1/intogen-mutations-analysis-e76a814dc868/ && ./setup')
			# node.ssh.execute('mv /root/.local/easybuild/software/intogen/2.4.1/intogen-mutations-analysis-e76a814dc868/data /data/database/intogen')
			# node.ssh.execute('ln -s /data/database/intogen /root/.local/easybuild/software/intogen/2.4.1/intogen-mutations-analysis-e76a814dc868/data')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/intogen /root/.local/easybuild/modules/all/intogen/2.4.1')

			log.info("Installing Homer on %s" % (node.alias))
			log.info("...installing dependencies")
			# node.ssh.execute('wget http://downloads.ghostscript.com/public/ghostscript-9.14.tar.gz')
			# node.ssh.execute('tar xvzf ghostscript-9.14.tar.gz -C /usr/bin/')
			# node.ssh.execute('cd /usr/bin/ghostscript-9.14 && ./configure')
			# node.ssh.execute('cd /usr/bin/ghostscript-9.14 && make')
			# node.ssh.execute('cd /usr/bin/ghostscript-9.14 && make install')
			node.ssh.execute('apt-get install -y zip')
			node.ssh.execute('wget http://weblogo.berkeley.edu/release/weblogo.2.8.2.tar.gz')
			node.ssh.execute('tar xvzf weblogo.2.8.2.tar.gz -C /usr/bin/')
			node.ssh.execute('mv /usr/bin/weblogo/seqlogo /usr/bin/seqlogo')
			log.info("...dependencies installed --> configuring Homer")
			node.ssh.execute('mkdir /root/.local/easybuild/modules/all/homer')  
			node.ssh.execute('mkdir -p /root/.local/easybuild/software/homer/4.6')
			node.ssh.execute('wget -c -P /root/.local/easybuild/software/homer/4.6 http://homer.salk.edu/homer/configureHomer.pl')
			node.ssh.execute('module load ucsc-tools/287 && module load samtools/0.1.19 && module load R/3.1.0 && perl /root/.local/easybuild/software/homer/4.6/configureHomer.pl -install')
			# node.ssh.execute('perl /root/.local/easybuild/software/homer/4.6/configureHomer.pl -install hg19')
			# node.ssh.execute('mv /root/.local/easybuild/software/homer/4.6/data/* /data/database/homer')
			# node.ssh.execute('ln -s /data/database/homer /root/.local/easybuild/software/homer/4.6/data')
			node.ssh.execute('cp /omics_pipe/dist/modulefiles/homer /root/.local/easybuild/modules/all/homer/4.6')

			log.info("Setting up R Packages")
			log.info("...installing packages from CRAN")
			node.ssh.execute('module load R/3.1.0 && Rscript /omics_pipe/dist/AWS_customBuild/packages_cran.R')
			log.info("...CRAN packages have been installed --> installing BioConductor packages")
			node.ssh.execute('module load R/3.1.0 && Rscript /omics_pipe/dist/AWS_customBuild/packages_bioc_1.R')
			log.info("...BioConductor1 packages have been installed")
			node.ssh.execute('module load R/3.1.0 && Rscript /omics_pipe/dist/AWS_customBuild/packages_bioc_2.R')
			log.info("...BioConductor2 packages have been installed")

			log.info("Installing omics_pipe on the command line")
			node.ssh.execute('pip install -e hg+https://bitbucket.org/sulab/omics_pipe#egg=omics_pipe')
			log.info("omicspipe plugin has completed")